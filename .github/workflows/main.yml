name: testing

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Add Tag name'
        required: true
        default: '@login'
  push:
    branches:
      - main  # Trigger this workflow on push to the main branch
  pull_request:
    branches:
      - main  # Trigger this workflow on pull request targeting the main branch

jobs:
  build:
    runs-on: ubuntu-latest  # The runner will use the latest Ubuntu image

    services:
      docker:
        image: docker:19.03.12-dind
        options: --privileged --network host  # Enabling Docker-in-Docker

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Set up JDK using Eclipse Temurin
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'  # Specify the Java version you need
        distribution: 'temurin'  # Use 'temurin' (Eclipse Temurin, previously AdoptOpenJDK)
        java-package: jdk
        architecture: x64

    # Step 3: Grant execute permissions to gradlew (in case it's missing)
    - name: Grant execute permissions to gradlew
      run: chmod +x ./gradlew  # Ensure gradlew has execute permissions

    # Step 4: Run Gradle build
    - name: Run Gradle build
      run: ./gradlew clean test -P"cucumber.filter.tags=${{ github.event.inputs.tag }}"

    # Step 5: Set up Docker for WebSocket server
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build Docker image for WebSocket server
      run: |
        docker build -t websocket-server .

    # Step 6: Run Docker container with WebSocket server
    - name: Run WebSocket container
      run: |
        docker run -d -p 3000:3000 websocket-server

    # Step 7: Wait for WebSocket server to start
    - name: Wait for WebSocket server to start
      run: |
        sleep 10  # Adjust based on your WebSocket server's startup time

    # Step 8: Test WebSocket server connection
    - name: Test WebSocket connection
      run: |
        # Example using curl (replace this with a WebSocket test if you have one)
        curl --max-time 5 http://localhost:3000
